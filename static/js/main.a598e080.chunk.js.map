{"version":3,"sources":["types.ts","api/client/endpoints/company.ts","api/client/http/index.ts","api/client/index.ts","store/features/errors/errorsSlice.ts","store/features/companyDetailsSlice.ts","components/pages/Home.tsx","components/app/providers/Router.tsx","store/index.ts","components/app/providers/Store.tsx","components/app/App.tsx","index.tsx"],"names":["HOST","ENDPOINT","HTTP_METHOD","CompanyEndpoint","client","path","COMPANY","this","get","HttpClient","api","API","endpoint","parameters","Axios","params","getRequestConfig","then","data","catch","error","console","GET","headers","ApiClient","company","instance","errorsSlice","createSlice","name","initialState","reducers","pushErrorAction","state","action","push","payload","showed","id","uuid","setErrorShowed","find","actions","defaultState","loading","companyDetailsSlice","loadingAction","isLoading","errorAction","message","setCompanyDetailsData","Title","Typography","Home","dispatch","useDispatch","useSelector","store","companyDetails","useEffect","a","factory","read","title","bordered","column","Object","keys","map","key","index","Item","label","labelStyle","fontWeight","key1","style","AppRouterProvider","basename","exact","component","configureStore","reducer","combineReducers","AppStoreProvider","props","children","Header","Layout","Content","Footer","Sider","StyledHeader","styled","App","useState","collapsed","setCollapsed","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","icon","BarsOutlined","AndroidOutlined","RocketOutlined","TeamOutlined","DingtalkOutlined","ExpandOutlined","ToTopOutlined","UploadOutlined","SubnodeOutlined","CarOutlined","CompassOutlined","className","margin","padding","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a598e080.chunk.js","sourcesContent":["import { Action, ThunkAction } from '@reduxjs/toolkit'\n\nexport enum HOST {\n  API = 'https://api.spacexdata.com/v4'\n}\n\nexport enum ENDPOINT {\n  COMPANY = 'company'\n}\n\nexport enum HTTP_METHOD {\n  POST = 'post',\n  GET = 'get',\n  PUT = 'put',\n  DELETE = 'delete',\n  PATCH = 'patch'\n}\n\nexport interface IHttpClient {\n  // post<Input, Output>(path: string, payload: Input): ApiResponse<Output>\n\n  get<Output, Input = Record<string, unknown>>(path: string, payload?: Input): ApiResponse<Output>\n}\n\nexport type ApiResponse<T> = Promise<T>\n\nexport type IThunk = ThunkAction<void, IRootStore, unknown, Action<string>>\n\nexport interface IRemoteData {\n  loading: boolean\n  error: null | string\n}\n\nexport interface ICompanyDetailsStore extends IRemoteData {\n  data: ICompany | null\n}\n\nexport interface ICompany {\n  id: string\n  name: string\n  founder: string\n  founded: number\n  employees: number\n  launch_sites: number\n  vehicles: number\n  test_sites: number\n  ceo: string\n  cto: string\n  coo: string\n  cto_propulsion: string\n  valuation: number\n  summary: string\n  headquarters: ICompanyHeadQuarters\n  links: ICompanyLinks\n}\n\nexport interface ICompanyHeadQuarters {\n  address: string\n  city: string\n  state: string\n}\n\nexport interface ICompanyLinks {\n  website: string\n  flickr: string\n  twitter: string\n  elon_twitter: string\n}\n\nexport interface IRootStore {\n  companyDetails: ICompanyDetailsStore\n}\n\nexport interface IError {\n  id?: string\n  showed?: boolean\n  message: string\n  title: string\n}\n","import { ApiResponse, ENDPOINT, ICompany, IHttpClient } from '../../../types'\n\nexport class CompanyEndpoint {\n  public path = `${ENDPOINT.COMPANY}`\n  constructor(protected readonly client: IHttpClient) {}\n\n  public read(): ApiResponse<ICompany> {\n    return this.client.get<ICompany>(this.path)\n  }\n}\n","import Axios, { AxiosRequestConfig } from 'axios'\nimport { ApiResponse, HOST, HTTP_METHOD, IHttpClient } from '../../../types'\n\nexport class HttpClient implements IHttpClient {\n  protected api: string = HOST.API\n\n  public get<T>(endpoint: string, parameters?: unknown): ApiResponse<T> {\n    return Axios.get(`${this.api}/${endpoint}`, {\n      params: parameters || null,\n      ...this.getRequestConfig()\n    })\n      .then(({ data }) => data)\n      .catch((error) => console.error(error, endpoint, HTTP_METHOD.GET))\n  }\n\n  protected getRequestConfig(): AxiosRequestConfig {\n    return {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n  }\n}\n","import { CompanyEndpoint } from './endpoints/company'\nimport { HttpClient } from './http'\n\nexport class ApiClient {\n  public company: CompanyEndpoint\n  protected client: HttpClient\n  private static instance: ApiClient\n\n  constructor() {\n    this.client = new HttpClient()\n    this.company = new CompanyEndpoint(this.client)\n  }\n\n  public static factory(): ApiClient {\n    if(!this.instance) {\n      return ApiClient.instance = new ApiClient()\n    }\n    return ApiClient.instance\n  }\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { v4 as uuid } from 'uuid'\nimport { IError } from '../../../types'\n\nexport const errorsSlice = createSlice({\n  name: 'errors',\n  initialState: [],\n  reducers: {\n    pushErrorAction: (state: IError[], action: PayloadAction<IError>) => {\n      state.push({ ...action.payload, showed: false, id: uuid() })\n    },\n    setErrorShowed: (state: IError[], action: PayloadAction<IError>) => {\n      const error = state.find(error => error.id === action.payload.id)\n      if (!error) {\n        return\n      }\n      error!.showed = true\n    }\n  }\n})\n\nexport const { pushErrorAction, setErrorShowed } = errorsSlice.actions","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ICompany, ICompanyDetailsStore, IThunk } from '../../types'\nimport { ApiClient } from '../../api/client'\nimport { pushErrorAction } from './errors/errorsSlice'\n\nconst defaultState = {\n  loading: false,\n  error: null,\n  data: null\n}\n\nexport const companyDetailsSlice = createSlice({\n  name: 'companyDetails',\n  initialState: defaultState,\n  reducers: {\n    loadingAction: (state: ICompanyDetailsStore, action: PayloadAction<{ isLoading: boolean }>) => {\n      state.loading = action.payload.isLoading\n    },\n    errorAction: (state: ICompanyDetailsStore, action: PayloadAction<{ message: string }>) => {\n      state.loading = defaultState.loading\n      state.error = action.payload.message\n    },\n    setCompanyDetailsData: (state: ICompanyDetailsStore, action: PayloadAction<{ data: ICompany }>) => {\n      state.error = defaultState.error\n      state.loading = defaultState.loading\n      state.data = action.payload.data\n    }\n  }\n})\n\nexport const { errorAction, loadingAction, setCompanyDetailsData } = companyDetailsSlice.actions\nexport const fetchCompanyDetailsThunk = (): IThunk => async (dispatch) => {\n  try {\n    dispatch(loadingAction({ isLoading: true }))\n    const client = ApiClient.factory()\n    const data = await client.company.read()\n    dispatch(setCompanyDetailsData({ data }))\n  } catch (error) {\n    dispatch(\n      pushErrorAction({\n        title: 'There was a problem fetching your dashboard data',\n        message: 'Fetching dashboard data error'\n      })\n    )\n    dispatch(errorAction({ message: error.message }))\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { IRootStore } from '../../types'\nimport { fetchCompanyDetailsThunk } from '../../store/features/companyDetailsSlice'\nimport { Descriptions, Typography } from 'antd'\n\nconst { Title } = Typography\n\nexport const Home: React.FC = () => {\n  const dispatch = useDispatch()\n  const data = (useSelector((store: IRootStore) => store.companyDetails.data) as unknown) as Record<string, any>\n\n  useEffect(() => {\n    if (!data) {\n      dispatch(fetchCompanyDetailsThunk())\n    }\n  }, [data, dispatch])\n\n  return (\n    <>\n      {data && (\n        <div>\n          <Title>Company Details</Title>\n          <Descriptions bordered column={1}>\n            {Object.keys(data).map((key: string, index: number) => (\n              <Descriptions.Item key={index} label={key} labelStyle={{ fontWeight: 'bold' }}>\n                {typeof data[key] === 'object'\n                  ? Object.keys(data[key]).map((key1) => (\n                      <div key={key1}>\n                        <p>\n                          <span style={{ fontWeight: 'bold' }}>{key1}</span>: {data[key][key1]}\n                        </p>\n                        <br />\n                      </div>\n                    ))\n                  : data[key]}\n              </Descriptions.Item>\n            ))}\n          </Descriptions>\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Home } from '../../pages/Home'\n\nexport const AppRouterProvider: React.FC = () => (\n  <Router basename={'http://Gio85.github.io/space_x'}>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  </Router>\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { companyDetailsSlice } from './features/companyDetailsSlice'\nimport { errorsSlice } from './features/errors/errorsSlice'\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    [errorsSlice.name]: errorsSlice.reducer,\n    [companyDetailsSlice.name]: companyDetailsSlice.reducer\n  })\n})\n","import { Provider } from 'react-redux'\nimport React from 'react'\nimport { store } from '../../../store'\n\nexport const AppStoreProvider: React.FC = (props): React.ReactElement =>\n  <Provider store={store}>\n    {props.children}\n  </Provider>\n","import { Layout, Menu } from 'antd'\nimport {\n  AndroidOutlined,\n  BarsOutlined,\n  CarOutlined,\n  CompassOutlined,\n  DingtalkOutlined,\n  ExpandOutlined,\n  RocketOutlined,\n  SubnodeOutlined,\n  TeamOutlined,\n  ToTopOutlined,\n  UploadOutlined\n} from '@ant-design/icons'\nimport React, { useState } from 'react'\nimport 'antd/dist/antd.css'\nimport { AppRouterProvider } from './providers/Router'\nimport styled from '@emotion/styled'\nimport { AppStoreProvider } from './providers/Store'\n\nconst { Header, Content, Footer, Sider } = Layout\n\nconst StyledHeader = styled(Header)`\n  font-size: 20px;\n  color: white;\n  padding: 0 10px;\n`\n\nexport const App: React.FC = () => {\n  const [collapsed, setCollapsed] = useState<boolean>(false)\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={(collapsed) => setCollapsed(collapsed)}>\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n          <Menu.Item key=\"1\" icon={<BarsOutlined />}>\n            Company Info\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<AndroidOutlined />}>\n            Capsules\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<RocketOutlined />}>\n            Rockets\n          </Menu.Item>\n          <Menu.Item key=\"4\" icon={<TeamOutlined />}>\n            Crew\n          </Menu.Item>\n          <Menu.Item key=\"5\" icon={<DingtalkOutlined />}>\n            Dragons\n          </Menu.Item>\n          <Menu.Item key=\"6\" icon={<ExpandOutlined />}>\n            Landpads\n          </Menu.Item>\n          <Menu.Item key=\"7\" icon={<ToTopOutlined />}>\n            Launches\n          </Menu.Item>\n          <Menu.Item key=\"8\" icon={<UploadOutlined />}>\n            Launchpads\n          </Menu.Item>\n          <Menu.Item key=\"9\" icon={<SubnodeOutlined />}>\n            Payloads\n          </Menu.Item>\n          <Menu.Item key=\"10\" icon={<CarOutlined />}>\n            Roadster Info\n          </Menu.Item>\n          <Menu.Item key=\"11\" icon={<CompassOutlined />}>\n            Ships\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <StyledHeader className=\"site-layout-background\">SpaceX News</StyledHeader>\n        <Content style={{ margin: '0 16px' }}>\n          <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n            <AppStoreProvider>\n              <AppRouterProvider />\n            </AppStoreProvider>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n      </Layout>\n    </Layout>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './components/app/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}