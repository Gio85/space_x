{"version":3,"sources":["types/app.ts","api/client/endpoints/company.ts","api/client/http/index.ts","api/client/endpoints/crew.ts","api/client/index.ts","store/features/errors/errorsSlice.ts","store/features/companyDetailsSlice.ts","store/features/crewListSlice.ts","components/app/SideBar.tsx","components/shared/BaseLayout.tsx","components/pages/HomePage.tsx","components/pages/CrewList.tsx","store/features/crewReadSlice.ts","components/pages/CrewRead.tsx","components/app/providers/Router.tsx","store/index.ts","components/app/providers/Store.tsx","components/app/App.tsx","index.tsx","types/index.ts"],"names":["HOST","API_ENDPOINT","APP_ENDPOINT","HTTP_METHOD","CompanyEndpoint","client","path","COMPANY","this","get","HttpClient","api","API","endpoint","parameters","Axios","params","getRequestConfig","then","data","catch","error","console","GET","headers","CrewEndpoint","CREW","id","ApiClient","company","crew","instance","errorsSlice","createSlice","name","initialState","reducers","pushErrorAction","state","action","push","payload","showed","uuid","setErrorShowed","find","actions","defaultState","loading","companyDetailsSlice","loadingCompanyAction","isLoading","errorCompanyAction","message","setCompanyDetailsData","crewListSlice","loadingCrewListAction","errorCrewListAction","setCrewListData","SideBar","useState","collapsed","setCollapsed","Sider","collapsible","onCollapse","style","paddingTop","theme","mode","Item","icon","BarsOutlined","to","HOME","AndroidOutlined","CAPSULES","RocketOutlined","ROCKETS","TeamOutlined","DingtalkOutlined","DRAGONS","ExpandOutlined","LANDPADS","ToTopOutlined","LAUNCHES","UploadOutlined","LAUNCHPADS","SubnodeOutlined","PAYLOADS","CarOutlined","ROADSTER","CompassOutlined","SHIPS","Header","Layout","Content","Footer","StyledHeader","styled","StyledLayout","StyledContent","StyledDiv","div","padding","minHeight","StyledFooter","BaseLayout","props","className","children","Title","Typography","HomePage","dispatch","useDispatch","useSelector","store","companyDetails","useEffect","a","factory","read","title","bordered","column","Object","keys","map","key","index","label","labelStyle","fontWeight","key1","Meta","Card","CrewListPage","crewList","list","gutter","justify","span","width","margin","hoverable","cover","alt","src","image","maxHeight","crewReadSlice","loadingCrewReadAction","errorCrewReadAction","setCrewReadData","CrewReadPage","useParams","crewMember","crewRead","fetchCrewReadThunk","height","bodyStyle","status","color","text","toUpperCase","agency","launches","type","href","wikipedia","target","LinkOutlined","AppRouterProvider","basename","window","location","pathname","exact","component","configureStore","reducer","combineReducers","AppStoreProvider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23798405.chunk.js","sourcesContent":["import { Action, ThunkAction } from '@reduxjs/toolkit'\nimport { ICompany } from './company'\nimport { ICrew } from './crew'\n\nexport enum HOST {\n  API = 'https://api.spacexdata.com/v4'\n}\n\nexport enum API_ENDPOINT {\n  COMPANY = 'company',\n  CAPSULES= 'capsules',\n  ROCKETS = 'rockets',\n  CREW = 'crew',\n  DRAGONS = 'dragons',\n  LANDPADS = 'landpads',\n  LAUNCHES = 'launches',\n  LAUNCHPADS ='launchpads',\n  PAYLOADS = 'payloads',\n  ROADSTER = 'roadster',\n}\n\nexport enum APP_ENDPOINT {\n  HOME = '',\n  CAPSULES= 'capsules',\n  ROCKETS = 'rockets',\n  CREW = 'crew',\n  DRAGONS = 'dragons',\n  LANDPADS = 'landpads',\n  LAUNCHES = 'launches',\n  LAUNCHPADS ='launchpads',\n  PAYLOADS = 'payloads',\n  ROADSTER = 'roadster',\n  SHIPS = 'ships'\n}\n\nexport enum HTTP_METHOD {\n  POST = 'post',\n  GET = 'get',\n  PUT = 'put',\n  DELETE = 'delete',\n  PATCH = 'patch'\n}\n\nexport interface IHttpClient {\n  get<Output, Input = Record<string, unknown>>(path: string, payload?: Input): ApiResponse<Output>\n}\n\nexport type ApiResponse<T> = Promise<T>\n\nexport type IThunk = ThunkAction<void, IRootStore, unknown, Action<string>>\n\nexport interface IDataStore<T> {\n  loading: boolean\n  error: null | string\n  data: T | null\n}\n\nexport interface IRootStore {\n  companyDetails: IDataStore<ICompany>\n  crewList: IDataStore<ICrew[]>\n  crewRead: IDataStore<ICrew>\n}","import { API_ENDPOINT, ApiResponse, ICompany, IHttpClient } from '../../../types'\n\nexport class CompanyEndpoint {\n  public path = `${API_ENDPOINT.COMPANY}`\n  constructor(protected readonly client: IHttpClient) {}\n\n  public read(): ApiResponse<ICompany> {\n    return this.client.get<ICompany>(this.path)\n  }\n}\n","import Axios, { AxiosRequestConfig } from 'axios'\nimport { ApiResponse, HOST, HTTP_METHOD, IHttpClient } from '../../../types'\n\nexport class HttpClient implements IHttpClient {\n  protected api: string = HOST.API\n\n  public get<T>(endpoint: string, parameters?: unknown): ApiResponse<T> {\n    return Axios.get(`${this.api}/${endpoint}`, {\n      params: parameters || null,\n      ...this.getRequestConfig()\n    })\n      .then(({ data }) => data)\n      .catch((error) => console.error(error, endpoint, HTTP_METHOD.GET))\n  }\n\n  protected getRequestConfig(): AxiosRequestConfig {\n    return {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n  }\n}\n","import { API_ENDPOINT, ApiResponse, IHttpClient } from '../../../types'\nimport { ICrew } from '../../../types/crew'\n\nexport class CrewEndpoint {\n  public path = `${API_ENDPOINT.CREW}`\n  constructor(protected readonly client: IHttpClient) {}\n\n  public list(): ApiResponse<ICrew[]> {\n    return this.client.get<ICrew[]>(this.path)\n  }\n\n  public read(id: string): ApiResponse<ICrew> {\n    return this.client.get<ICrew>(`${this.path}/${id}`)\n  }\n}\n","import { CompanyEndpoint } from './endpoints/company'\nimport { HttpClient } from './http'\nimport { CrewEndpoint } from './endpoints/crew'\n\nexport class ApiClient {\n  public company: CompanyEndpoint\n  public crew: CrewEndpoint\n  protected client: HttpClient\n  private static instance: ApiClient\n\n  constructor() {\n    this.client = new HttpClient()\n    this.company = new CompanyEndpoint(this.client)\n    this.crew = new CrewEndpoint(this.client)\n  }\n\n  public static factory(): ApiClient {\n    if(!this.instance) {\n      return ApiClient.instance = new ApiClient()\n    }\n    return ApiClient.instance\n  }\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { v4 as uuid } from 'uuid'\nimport { IError } from '../../../types'\n\nexport const errorsSlice = createSlice({\n  name: 'errors',\n  initialState: [],\n  reducers: {\n    pushErrorAction: (state: IError[], action: PayloadAction<IError>) => {\n      state.push({ ...action.payload, showed: false, id: uuid() })\n    },\n    setErrorShowed: (state: IError[], action: PayloadAction<IError>) => {\n      const error = state.find(error => error.id === action.payload.id)\n      if (!error) {\n        return\n      }\n      error!.showed = true\n    }\n  }\n})\n\nexport const { pushErrorAction, setErrorShowed } = errorsSlice.actions","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ICompany, IDataStore, IThunk } from '../../types'\nimport { ApiClient } from '../../api/client'\nimport { pushErrorAction } from './errors/errorsSlice'\n\nconst defaultState = {\n  loading: false,\n  error: null,\n  data: null\n}\n\nexport const companyDetailsSlice = createSlice({\n  name: 'companyDetails',\n  initialState: defaultState,\n  reducers: {\n    loadingCompanyAction: (state: IDataStore<ICompany>, action: PayloadAction<{ isLoading: boolean }>) => {\n      state.loading = action.payload.isLoading\n    },\n    errorCompanyAction: (state: IDataStore<ICompany>, action: PayloadAction<{ message: string }>) => {\n      state.loading = defaultState.loading\n      state.error = action.payload.message\n    },\n    setCompanyDetailsData: (state: IDataStore<ICompany>, action: PayloadAction<{ data: ICompany }>) => {\n      state.error = defaultState.error\n      state.loading = defaultState.loading\n      state.data = action.payload.data\n    }\n  }\n})\n\nexport const { errorCompanyAction, loadingCompanyAction, setCompanyDetailsData } = companyDetailsSlice.actions\nexport const fetchCompanyDetailsThunk = (): IThunk => async (dispatch) => {\n  try {\n    dispatch(loadingCompanyAction({ isLoading: true }))\n    const client = ApiClient.factory()\n    const data = await client.company.read()\n    dispatch(setCompanyDetailsData({ data }))\n  } catch (error) {\n    dispatch(\n      pushErrorAction({\n        title: 'There was a problem fetching company details data',\n        message: 'Fetching company details data error'\n      })\n    )\n    dispatch(errorCompanyAction({ message: error.message }))\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { IDataStore, IThunk } from '../../types'\nimport { ApiClient } from '../../api/client'\nimport { pushErrorAction } from './errors/errorsSlice'\nimport { ICrew } from '../../types/crew'\n\nconst defaultState = {\n  loading: false,\n  error: null,\n  data: null\n}\n\nexport const crewListSlice = createSlice({\n  name: 'crewList',\n  initialState: defaultState,\n  reducers: {\n    loadingCrewListAction: (state: IDataStore<ICrew>, action: PayloadAction<{ isLoading: boolean }>) => {\n      state.loading = action.payload.isLoading\n    },\n    errorCrewListAction: (state: IDataStore<ICrew>, action: PayloadAction<{ message: string }>) => {\n      state.loading = defaultState.loading\n      state.error = action.payload.message\n    },\n    setCrewListData: (state: IDataStore<ICrew[]>, action: PayloadAction<{ data: ICrew[] }>) => {\n      state.error = defaultState.error\n      state.loading = defaultState.loading\n      state.data = action.payload.data\n    }\n  }\n})\n\nexport const { errorCrewListAction, loadingCrewListAction, setCrewListData } = crewListSlice.actions\nexport const fetchCrewListThunk = (): IThunk => async (dispatch) => {\n  try {\n    dispatch(loadingCrewListAction({ isLoading: true }))\n    const client = ApiClient.factory()\n    const data = await client.crew.list()\n    dispatch(setCrewListData({ data }))\n  } catch (error) {\n    dispatch(\n      pushErrorAction({\n        title: 'There was a problem fetching crew list data',\n        message: 'Fetching crew list data error'\n      })\n    )\n    dispatch(errorCrewListAction({ message: error.message }))\n  }\n}\n","import React, { useState } from 'react'\nimport { Menu } from 'antd'\nimport {\n  AndroidOutlined,\n  BarsOutlined,\n  CarOutlined,\n  CompassOutlined,\n  DingtalkOutlined,\n  ExpandOutlined,\n  RocketOutlined,\n  SubnodeOutlined,\n  TeamOutlined,\n  ToTopOutlined,\n  UploadOutlined\n} from '@ant-design/icons'\nimport Sider from 'antd/es/layout/Sider'\nimport { Link } from 'react-router-dom'\nimport { APP_ENDPOINT } from '../../types'\n\nexport const SideBar: React.FC = () => {\n  const [collapsed, setCollapsed] = useState<boolean>(false)\n\n  return (\n    <Sider\n      collapsible\n      collapsed={collapsed}\n      onCollapse={(collapsed) => setCollapsed(collapsed)}\n      style={{ paddingTop: '10vh' }}\n    >\n      <Menu theme=\"dark\" mode=\"inline\">\n        <Menu.Item key=\"1\" icon={<BarsOutlined />}>\n          <Link to={APP_ENDPOINT.HOME}>Company Info</Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<AndroidOutlined />}>\n          <Link to={APP_ENDPOINT.CAPSULES}>Capsules</Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\" icon={<RocketOutlined />}>\n          <Link to={APP_ENDPOINT.ROCKETS}>Rockets</Link>\n        </Menu.Item>\n        <Menu.Item key=\"4\" icon={<TeamOutlined />}>\n          <Link to={APP_ENDPOINT.CREW}>Crew</Link>\n        </Menu.Item>\n        <Menu.Item key=\"5\" icon={<DingtalkOutlined />}>\n          <Link to={APP_ENDPOINT.DRAGONS}>Dragons</Link>\n        </Menu.Item>\n        <Menu.Item key=\"6\" icon={<ExpandOutlined />}>\n          <Link to={APP_ENDPOINT.LANDPADS}>Landpads</Link>\n        </Menu.Item>\n        <Menu.Item key=\"7\" icon={<ToTopOutlined />}>\n          <Link to={APP_ENDPOINT.LAUNCHES}>Launches</Link>\n        </Menu.Item>\n        <Menu.Item key=\"8\" icon={<UploadOutlined />}>\n          <Link to={APP_ENDPOINT.LAUNCHPADS}>Launchpads</Link>\n        </Menu.Item>\n        <Menu.Item key=\"9\" icon={<SubnodeOutlined />}>\n          <Link to={APP_ENDPOINT.PAYLOADS}>Payloads</Link>\n        </Menu.Item>\n        <Menu.Item key=\"10\" icon={<CarOutlined />}>\n          <Link to={APP_ENDPOINT.ROADSTER}>Roadster Info</Link>\n        </Menu.Item>\n        <Menu.Item key=\"11\" icon={<CompassOutlined />}>\n          <Link to={APP_ENDPOINT.SHIPS}>Ships</Link>\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  )\n}\n","import React from 'react'\nimport { Layout } from 'antd'\nimport 'antd/dist/antd.css'\nimport styled from '@emotion/styled'\nimport { SideBar } from '../app/SideBar'\n\nconst { Header, Content, Footer } = Layout\n\nconst StyledHeader = styled(Header)`\n  font-size: 20px;\n  color: white;\n  padding: 0 10px;\n`\n\nconst StyledLayout = styled(Layout)`\n  min-height: 100vh;\n`\n\nconst StyledContent = styled(Content)`\n  margin: 0 16px;\n`\n\nconst StyledDiv = styled.div({\n  padding: 24,\n  minHeight: 360\n})\n\nconst StyledFooter = styled(Footer)`\n  text-align: center;\n`\n\nexport const BaseLayout: React.FC = (props) => {\n  return (\n    <StyledLayout>\n      <SideBar />\n      <Layout className=\"site-layout\">\n        <StyledHeader className=\"site-layout-background\">SpaceX</StyledHeader>\n        <StyledContent>\n          <StyledDiv className=\"site-layout-background\">{props.children}</StyledDiv>\n        </StyledContent>\n        <StyledFooter>SpaceX created with Ant Design ©2018</StyledFooter>\n      </Layout>\n    </StyledLayout>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { IRootStore } from '../../types'\nimport { fetchCompanyDetailsThunk } from '../../store/features'\nimport { Descriptions, Typography } from 'antd'\nimport { BaseLayout } from '../shared/BaseLayout'\n\nconst { Title } = Typography\n\nexport const HomePage: React.FC = () => {\n  const dispatch = useDispatch()\n  const data = (useSelector((store: IRootStore) => store.companyDetails.data) as unknown) as Record<string, any>\n\n  useEffect(() => {\n    if (!data) {\n      dispatch(fetchCompanyDetailsThunk())\n    }\n  }, [data, dispatch])\n\n  return (\n    <BaseLayout>\n      {data && (\n        <div>\n          <Title>Company Details</Title>\n          <Descriptions bordered column={1}>\n            {Object.keys(data).map((key: string, index: number) => (\n              <Descriptions.Item key={index} label={key} labelStyle={{ fontWeight: 'bold' }}>\n                {typeof data[key] === 'object'\n                  ? Object.keys(data[key]).map((key1) => (\n                      <div key={key1}>\n                        <p>\n                          <span style={{ fontWeight: 'bold' }}>{key1}</span>: {data[key][key1]}\n                        </p>\n                        <br />\n                      </div>\n                    ))\n                  : data[key]}\n              </Descriptions.Item>\n            ))}\n          </Descriptions>\n        </div>\n      )}\n    </BaseLayout>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { APP_ENDPOINT, ICrew, IRootStore } from '../../types'\nimport { fetchCrewListThunk } from '../../store/features'\nimport { Card, Col, Row, Typography } from 'antd'\nimport { BaseLayout } from '../shared/BaseLayout'\nimport { Link } from 'react-router-dom'\n\nconst { Title } = Typography\nconst { Meta } = Card\n\nexport const CrewListPage: React.FC = () => {\n  const dispatch = useDispatch()\n  const data = (useSelector((store: IRootStore) => store.crewList.data) as unknown) as Record<string, any>\n\n  useEffect(() => {\n    if (!data) {\n      dispatch(fetchCrewListThunk())\n    }\n  }, [data, dispatch])\n\n  return (\n    <BaseLayout>\n      {data && (\n        <div>\n          <Title>Crew</Title>\n          <Row gutter={[16, 16]} justify=\"center\">\n            {data.map((crew: ICrew) => (\n              <Col key={crew.id} span={8}>\n                <div style={{ width: 240, margin: '0 auto'}}>\n                  <Link to={`${APP_ENDPOINT.CREW}/${crew.id}`}>\n                    <Card hoverable cover={<img alt=\"crew\" src={`${crew.image}`} style={{ maxHeight: 300 }} />}>\n                      <Meta title={`${crew.name}`} />\n                    </Card>\n                  </Link>\n                </div>\n              </Col>\n            ))}\n          </Row>\n        </div>\n      )}\n    </BaseLayout>\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ICrew, IDataStore, IThunk } from '../../types'\nimport { ApiClient } from '../../api/client'\nimport { pushErrorAction } from './errors/errorsSlice'\n\nconst defaultState = {\n  loading: false,\n  error: null,\n  data: null\n}\n\nexport const crewReadSlice = createSlice({\n  name: 'crewRead',\n  initialState: defaultState,\n  reducers: {\n    loadingCrewReadAction: (state: IDataStore<ICrew>, action: PayloadAction<{ isLoading: boolean }>) => {\n      state.loading = action.payload.isLoading\n    },\n    errorCrewReadAction: (state: IDataStore<ICrew>, action: PayloadAction<{ message: string }>) => {\n      state.loading = defaultState.loading\n      state.error = action.payload.message\n    },\n    setCrewReadData: (state: IDataStore<ICrew>, action: PayloadAction<{ data: ICrew }>) => {\n      state.error = defaultState.error\n      state.loading = defaultState.loading\n      state.data = action.payload.data\n    }\n  }\n})\n\nexport const { errorCrewReadAction, loadingCrewReadAction, setCrewReadData } = crewReadSlice.actions\nexport const fetchCrewReadThunk = (id: string): IThunk => async (dispatch) => {\n  try {\n    dispatch(loadingCrewReadAction({ isLoading: true }))\n    const client = ApiClient.factory()\n    const data = await client.crew.read(id)\n    dispatch(setCrewReadData({ data }))\n  } catch (error) {\n    dispatch(\n      pushErrorAction({\n        title: 'There was a problem fetching crew read data',\n        message: 'Fetching crew read data error'\n      })\n    )\n    dispatch(errorCrewReadAction({ message: error.message }))\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { IRootStore } from '../../types'\nimport { Badge, Button, Card, Col, Descriptions, Row, Typography } from 'antd'\nimport { BaseLayout } from '../shared/BaseLayout'\nimport { useParams } from 'react-router-dom'\nimport { fetchCrewReadThunk } from '../../store/features/crewReadSlice'\nimport { LinkOutlined } from '@ant-design/icons'\n\nconst { Title } = Typography\n\nexport const CrewReadPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>()\n  const dispatch = useDispatch()\n  const crewMember = (useSelector((store: IRootStore) => store.crewRead.data) as unknown) as Record<string, any>\n\n  useEffect(() => {\n    if (!crewMember || id !== crewMember.id) {\n      dispatch(fetchCrewReadThunk(id))\n    }\n  }, [crewMember, dispatch])\n\n  return (\n    <BaseLayout>\n      {crewMember && (\n        <div>\n          <Title>{crewMember.name}</Title>\n          <Row gutter={16} justify=\"center\">\n            <Col span={12}>\n              <Card\n                style={{ width: 550 }}\n                cover={<img alt={`${crewMember.name}`} src={`${crewMember.image}`} style={{ height: 600 }} />}\n                bodyStyle={{ padding: 0 }}\n              />\n            </Col>\n            <Col span={12}>\n              <Descriptions bordered column={1}>\n                <Descriptions.Item label=\"Status\" labelStyle={{ fontWeight: 'bold' }}>\n                  {crewMember.status === 'active' ? (\n                    <Badge color=\"green\" status=\"processing\" text={crewMember.status.toUpperCase()} />\n                  ) : (\n                    <Badge color=\"red\" text={crewMember.status.toUpperCase()} />\n                  )}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Agency\" labelStyle={{ fontWeight: 'bold' }}>\n                  {crewMember.agency}\n                </Descriptions.Item>\n                {/* TODO: make these clickable */}\n                <Descriptions.Item label=\"Launches\" labelStyle={{ fontWeight: 'bold' }}>\n                  {crewMember.launches}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Wikipedia\" labelStyle={{ fontWeight: 'bold' }}>\n                  <Button type=\"link\" href={crewMember.wikipedia} target=\"_blank\">\n                    <LinkOutlined />\n                  </Button>\n                </Descriptions.Item>\n              </Descriptions>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </BaseLayout>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { HomePage } from '../../pages/HomePage'\nimport { APP_ENDPOINT } from '../../../types'\nimport { CrewListPage } from '../../pages/CrewList'\nimport { CrewReadPage } from '../../pages/CrewRead'\n\nexport const AppRouterProvider: React.FC = () => (\n  <Router basename={window.location.pathname || ''}>\n    <Switch>\n      <Route exact path={`/${APP_ENDPOINT.CREW}`} component={CrewListPage} />\n      <Route exact path={`/${APP_ENDPOINT.CREW}/:id`} component={CrewReadPage} />\n      <Route exact path={'/'} component={HomePage} />\n    </Switch>\n  </Router>\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport { companyDetailsSlice, crewListSlice, errorsSlice } from './features'\nimport { crewReadSlice } from './features/crewReadSlice'\n\nexport const store = configureStore({\n  reducer: combineReducers({\n    [errorsSlice.name]: errorsSlice.reducer,\n    [companyDetailsSlice.name]: companyDetailsSlice.reducer,\n    [crewListSlice.name]: crewListSlice.reducer,\n    [crewReadSlice.name]: crewReadSlice.reducer\n  })\n})\n","import { Provider } from 'react-redux'\nimport React from 'react'\nimport { store } from '../../../store'\n\nexport const AppStoreProvider: React.FC = (props): React.ReactElement =>\n  <Provider store={store}>\n    {props.children}\n  </Provider>\n","import React from 'react'\nimport 'antd/dist/antd.css'\nimport { AppRouterProvider } from './providers/Router'\nimport { AppStoreProvider } from './providers/Store'\n\nexport const App: React.FC = () => {\n  return (\n    <AppStoreProvider>\n      <AppRouterProvider />\n    </AppStoreProvider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './components/app/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export * from './app'\nexport * from './company'\nexport * from './error'\nexport * from './crew'"],"sourceRoot":""}